# Name: invite
# Description: modules and configuration shared by all forwarding INVITE modules

#
# This code is only used by recipes where we forward the INVITE.
# If the INVITE is terminated locally (e.g. with a 302/404 pair)
# then there is no need to use this code in a recipe.
#

onreply_route[1]
{
  xlog("L_DBG","-- onreply_route(1) -- $si -- $mb");

  # In-progress flag
  if( t_check_status("[12][0-9][0-9]") ) {
      setbflag(${bflag_in_progress});
  }

  # SDP mangling: Linksys SPA2102 improper SDP
  replace_body_all("a=rtpmap:18 G729a/8000", "a=rtpmap:18 G729/8000");

  # On call forwarding we cannot accept the initial 183.
  # Substitute with 180 (done in INVITE).
  if( t_check_status("183") && isflagset(${flag_has_forwarding}) ) {
      drop;
  }

  route(media-proxy-reply-handler); # MP on-reply
  ${onreply_nat}
}

# -----------------------------------------------------------------
# Failure route
# -----------------------------------------------------------------

failure_route[1]
{
  xlog("L_DBG","-- failure_route(1) -- $rm $ru");

  if(!is_method("INVITE")) {
    return;
  }

  # For fax negotiation 488 might be a normal outcome.
  if(!t_check_status("488")) {
    route(stop-media-proxy); # End media session
  }

  if(t_was_cancelled() || t_check_status("504")) {
    xlog("L_DBG","-- failure_route(1): conversation was canceled.");
    return;
  }

  # Handle redirects
  if( t_check_status("302") ) {
    get_redirects("6:2"); # max_total:max_branch, reason
    serialize_branches(1);
    route(forwarder);
    exit;
  }

  if not skip_uac_auth
    if($avp(uac_realm)) {
      # Check whether we were supposed to authenticate (uac_auth)
      if( t_check_status("40[17]") ) {
        # Already attempted.
        # Note: this breaks if we failover (e.g. SRV or multiple DNS As)
        if(isbflagset(${bflag_auth_attempted})) {
          xlog("L_DBG","-- failure_route(1): uac_auth already attempted.");
          t_reply("503","Authentication failed");
          exit;
        }

        xlog("L_DBG","-- failure_route(1): Attempting uac_auth.");
        if(uac_auth()) {
          setbflag(${bflag_auth_attempted});
          t_on_failure("1");
          route(forwarder);
          exit;
        }

        xlog("L_ERR","ERROR -- failure_route(1): uac_auth() failed on $rm $ru");
        exit;
      }
    }

    resetbflag(${bflag_auth_attempted});
  end if not skip_uac_auth

  # Trunk-side processing
  if( isflagset(${flag_trunk_routing}) ) {

    # Don't failover on busy, loop detected, incomplete address, or not found
    # Note: 480 used to be here but since it is used as catch-all by FS it is better to progress on it.
    if( t_check_status("48[67241]|40[34]|60[0-9]") ) {
      xlog("L_DBG","-- failure_route(1): trunk: no progress on busy, loop, incomplete, forbidden, not found");
      return;
    }

  }

  # Process failure cases
  if (next_branches()) {
    t_on_failure("1");
    route(forwarder);
    exit;
  }

  if use_drouting
    if (next_routing()) {
      t_on_failure("1");
      route(trunk-attributes);
      route(update-media-proxy);
      route(forwarder);
      exit;
    }
  end if use_drouting

  # Trunk-side processing
  if( isflagset(${flag_trunk_routing}) ) {

    # Ring no Answer
    if( isbflagset(${bflag_in_progress}) && t_check_status("408") ) {
      xlog("L_DBG","-- failure_route(1): trunk: no answer");
      t_reply("486","No Answer");
      return;
    }

  }

  if not skip_lineside
    # Line-side processing

    # On 486 Busy Here use CFB
    if( t_check_status("486") ) {
      xlog("L_DBG","-- Attempting CFB");
      if( $avp(cfb) ) {
        route(stop-media-proxy);
        $ru = $avp(cfb);
        serialize_branches(1);
        t_reply("302","Call Forward Busy");
        exit;
      }

      # No CFB, forward along
      t_reply("486","Busy Here");
      return;
    }

    # Other errors trigger CFDA
    xlog("L_DBG","-- Attempting CFDA");
    if( $avp(cfda) ) {
      route(stop-media-proxy);
      $ru = $avp(cfda);
      serialize_branches(1);
      t_reply("302","Call Forward Didnt Answer");
      exit;
    }
  end if not skip_lineside

  # No alternate found.
}
