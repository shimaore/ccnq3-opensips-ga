# Name: register-colocted
# Group: register-handler
# Description: REGISTER handler for a colocated registrar

# -----------------------------------------------------------------
# REGISTER Message Handler: Router and registrar co-located
# -----------------------------------------------------------------

# Router and registrar are co-located

  # REGISTER messages are processed locally.
define do_not_forward_register

route[register-handler]
{
    xlog("L_DBG","-- register_handler -- REGISTER Message Handler from $source_uri");

    ${register_nat}

    if( if has_trusted allow_trusted() || end if has_trusted 0 ) {
        xlog("L_WARN", "WARNING -- register_handler -- Trusted device $si ($fu) attempts to register");
    } else {
      route(authenticate_register);

      if (!db_check_to()) {
        xlog("L_WARN", "WARNING -- register_handler -- Rogue device $si ($fu) attempts to register");
        t_reply("401", "Unauthorized");
        exit;
      };
    }

  if min_expires
    $var(expires) = 0;
    if( is_present_hf("Expires") && $(hdr(Expires){s.int}) > 0 ) {
      $var(expires) = $(hdr(Expires){s.int});
    }
    if( $ct.fields(expires) && $(ct.fields(expires){s.int}) > 0 ) {
      $var(expires) = $(ct.fields(expires){s.int});
    }
    # var(expires) might be 0 if no Expires was found,
    # or if Expires was 0, which means un-register.
    if( $var(expires) > 0 && $var(expires) < ${min_expires} ) {
      append_hf("Min-Expires: ${min_expires}");
      t_reply("423","Interval Too Brief");
      exit;
    }

  end if min_expires

  if has_usrloc

    if( !save("${usrloc_table}","${usrloc_flags}") ) {
      xlog("L_ERR", "ERROR -- register_handler -- could not save location $si ($fu).");
      t_reply("500", "Could not save location");
      exit;
    }
  end if has_usrloc
  exit;
}

# Co-located

macro lookup
  if( $json(dst_endpoint/password) ) {

  xlog("L_DBG","-- lookup -- Lookup $var(aor)");

  lookup("${usrloc_table}","","$var(aor)");
  $var(code) = $retcode;

  xlog("L_DBG","-- lookup -- Lookup returned $var(code)");
  switch ($var(code)) {
      case 1:
        xlog("L_DBG","-- lookup -- Contact found");
        break;

      # Contact found, method not supported.
      case -2:
        xlog("L_DBG","-- lookup -- Contact found, method not supported.");
        t_reply("405", "Not Found");
        exit;
        break;

      # No contact found
      case -1:
        $var(replace_404_with_486) = 1;
      # Internal error
      case -3:
        route(registered-static-line-side);
        break;
  };

  }
end macro lookup
